{"version":3,"sources":["./src/app/core/utils.ts","./src/app/func/pipe/Status.pipe.ts","./src/app/pages/account/account.component.scss","./src/app/service/auth.service.ts","./src/app/service/common.service.ts","./src/app/func/selecter/goods-selector/goods-selector.component.ts","./src/environments/environment.ts","./src/app/pages/account/account.component.ts","./src/app/core/secondUtils.ts","./src/app/service/user.service.ts","./src/app/func/selecter/goods-selector/goods-selector.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/func/selecter/goods-selector/goods-selector.component.scss","./src/app/base/vuser.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/service/goods.service.ts","./src/app/func/func.module.ts","./src/app/net/yunzhi.interceptor.ts","./src/app/conf/app.conf.ts","./src/app/pages/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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hB,CAAC;CAAA;AAFY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACPzB;AAAe,kGAAmC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAM;AACjB;AAEe;AACT;AAEC;AAG2B;AACd;AACQ;AACA;AAEhB;AACR;IAyB9B,SAAS,SAAT,SAAS;CACrB;AADY,SAAS;IAvBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,iFAAgB;SACjB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,4DAAU;YACV,qEAAgB;YAChB,kFAAiB;YACjB,mEAAmB;YACnB,2DAAW,CAAC,OAAO,EAAE;SACtB;QACD,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,sEAAiB;gBAC1B,QAAQ,EAAE,yEAAiB;gBAC3B,KAAK,EAAE,IAAI;aACZ;SACF;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;;;ACxCtB;AAAe,6GAA8C,uLAAuL,E;;;;;;;;;;;;ACApP;AAAA;AAAA;;GAEG;AACI,MAAM,KAAK;CAMjB;;;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;ACnO2C;AAEK;IAMnC,YAAY,SAAZ,YAAY;IAGvB,YAAqB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFnC,QAAG,GAAG,WAAW,CAAC;IAEqB,CAAC;IAEhD,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;CACF;;YAdO,+DAAU;;AAML,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAQxB;AARwB;;;;;;;;;;;;;;;;;;;;;;;ACRc;AACqD;AAC5B;AACnB;AACS;AACR;IAmBjC,UAAU,SAAV,UAAU;CACtB;AADY,UAAU;IAlBtB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,wGAAsB;YACtB,4DAAU;SACb;QACD,OAAO,EAAE;YACL,wGAAsB;YACtB,4DAAU;SACb;QACH,OAAO,EAA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","file":"main.js","sourcesContent":["import {interval} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\n// 解码\nconst decodeUnicode = (str): string => {\n  str = '\\\\u' + str;\n  str = str.replace(/\\\\/g, '%');\n\n  str = unescape(str);\n  str = str.replace(/%/g, '\\\\');\n  return str;\n};\n\nexport class Random {\n  /**\n   * 获取随机数据\n   * @param width 位宽\n   */\n  static nextNumber(width = 32): number {\n    let range = 1;\n    while (width > 0) {\n      range = range * 2;\n      width--;\n    }\n\n    return Math.floor(Math.random() * range);\n  }\n\n  /**\n   * 获取随机字符串\n   * @param prefix 返回字符串的前缀\n   * @param length 字符串长度\n   */\n  static nextString(prefix = '', length = 4): string {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return prefix + result;\n  }\n}\n\n/*\n* 获取取机的中文字符串\n*/\nexport const randomChineseString = (preString = '', length = 3): string => {\n  let name = '';\n  for (let i = 0; i < length; i++) {\n    let unicodeNum = '';\n    unicodeNum = randomNumberByRange(0x4e00, 0x9fa5).toString(16);\n    name += decodeUnicode(unicodeNum);\n  }\n  return preString + name;\n};\n\n/**\n * 获取指定范围内的随机数\n * @param min 最小值\n * @param max 最大值\n */\nconst randomNumberByRange = (min = 0, max = 1000): number => {\n  return Math.floor(Math.random() * (min - max) + max);\n};\n\n/**\n * 随机时间戳\n * @param day 随机生成的时间范围（天）\n * @param baseDate 生成时间范围基于某天\n * @sample\n * randomTimestamp(10, new Date(2020, 7, 12))\n * 返回：2020年7月12日前后10天的随机一天\n */\nexport const randomTimestamp = (day = 7, baseDate = new Date()) => {\n  const range = 1000 * 60 * 60 * 24 * day * 2;\n  return baseDate.getTime() + randomNumber(range) - range / 2;\n};\n\n\nexport const randomBoolean = () => {\n  return randomNumber(10) % 2 === 0;\n};\n\nexport const randomNumber = (range = 1000) => {\n  return Math.floor(Math.random() * range);\n};\n\nexport const randomString = (prefix = '', length = 4) => {\n  return prefix + Math.random().toString(36).slice(-length);\n};\n\n/**\n * 等待方法体中的函数返回true后，再返回promise\n * @param untilTruthy 返回boolean值的函数\n */\nexport const waitsFor = async (lastMethod: () => boolean, failureMessage = '花费的时间过长，请检查判断条件', timeout = 2000): Promise<boolean> => {\n  let spentTime = 0;\n  while (!lastMethod()) {\n    if (spentTime > timeout) {\n      throw new Error('花费的时间过长，请检查判断条件');\n    }\n    await interval(25).pipe(take(1)).toPromise();\n    spentTime += 25;\n  }\n  return Promise.resolve(true);\n};\n\n/**\n * 等待一会\n * @param timeout 中断时长\n */\nexport const waits = async (timeout = 25): Promise<void> => {\n  while (timeout > 0) {\n    await interval(25).pipe(take(1)).toPromise();\n    timeout -= 25;\n  }\n  return Promise.resolve();\n};\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'status'\n})\nexport class StatusPipe implements PipeTransform {\n  transform(value: number): string {\n    switch (value) {\n      case 0:\n        return `未揽收`;\n        break;\n      case 1:\n        return `已揽收`;\n        break;\n      case 2:\n        return `运输中`;\n        break;\n      case 3:\n        return `已送达`;\n        break;\n      case 4:\n        return `已完成`;\n        break;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjY291bnQvYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport {User} from '../func/User';\nimport {AppOnReadyItem, CommonService} from './common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseDir = 'auth';\n\n  private currentLoginUser: User;\n\n  /**\n   * buffer 设置为 1\n   * 只保留最新的登录用户\n   */\n  private currentLoginUser$ = new ReplaySubject<User>(1);\n\n  /**\n   * 用户注销时触发的回调函数\n   * 一般用于清除缓存\n   */\n  private loginTriggerCallbacks = new Array<() => void>();\n\n  /**\n   * APP是否准备好元素\n   * 将此加入到commonService中。能够来共同决定APP是否准备完毕\n   * 仅当commonService中所有的AppOnReadyItem全部准备完结后\n   * 才 this.commonService.appOnReady(() => { 执行这里的代码 })\n   * 比如：在系统使用前，我们需要先需要获取当前的登录用户，则在些新建一个AppOnReadyItem\n   * 并在构造函数中添加到commonService中。\n   */\n  private appOnReadyItem: AppOnReadyItem;\n\n  constructor(private httpClient: HttpClient,\n              protected router: Router,\n              private commonService: CommonService) {\n    this.appOnReadyItem = this.commonService.getAppOnReadyItem();\n    // 如果当前不是登录模块，请求当前登录用户\n    if (!this.router.url.startsWith(`/login`)) {\n      this.requestCurrentLoginUser();\n    } else {\n      this.appOnReadyItem.ready = true;\n    }\n  }\n\n\n  login(user: User): Observable<User> {\n    // 新建Headers，并添加认证信息\n    let headers = new HttpHeaders();\n    // 添加 content-type\n    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    // 添加认证信息\n    headers = headers.append('Authorization', 'Basic ' + btoa(user.username + ':' + encodeURIComponent(user.password)));\n    // 发起get请求并返回\n    return this.httpClient.get<User>(`${this.baseDir}/login`, {headers}).pipe(tap((data) => {\n    }));\n  }\n\n  /**\n   * 获取当前登录用户\n   */\n  getCurrentLoginUser$(): Observable<User> {\n    return this.currentLoginUser$;\n  }\n\n  /**\n   * 设置当前登录用户\n   * @param user 登录用户\n   */\n  setCurrentLoginUser(user: User): void {\n    this.currentLoginUser = user;\n    this.currentLoginUser$.next(user);\n  }\n\n  /**\n   * 请求当前登录用户\n   */\n  requestCurrentLoginUser(callback?: () => void): void {\n    this.appOnReadyItem.ready = false;\n    // 由于在构造函数中使用了本函数, 不加setTimeout在其他地方注入时可能会造成undefined的问题\n    // 为什么httpClient请求不以异步进行 需要setTimeout还没研究明白\n    setTimeout(() => {\n      this.httpClient.get<User>(`${this.baseDir}/user`)\n        .subscribe((user: User) => {\n          this.triggerLoginCallbacks();\n          this.setCurrentLoginUser(user);\n        }, () => {\n          this.appOnReadyItem.ready = true;\n        }, () => {\n          this.appOnReadyItem.ready = true;\n          if (callback) {\n            callback();\n          }\n        });\n    });\n  }\n\n  /**\n   * 调用登录成功后的回调函数\n   */\n  public triggerLoginCallbacks(): void {\n    this.loginTriggerCallbacks.forEach(callback => {\n      if (callback) {\n        callback();\n      }\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport swal, {SweetAlertIcon, SweetAlertResult} from 'sweetalert2';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {filter} from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {isNotNullOrUndefined} from 'codelyzer/util/isNotNullOrUndefined';\nimport * as Assert from 'assert';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {convertToLoadingFormat, UnknownProperty} from '../core/secondUtils';\nimport {Random} from '../core/utils';\n\n\n/**\n * 应用程序准备完毕的影响元素\n * 用于程序程序时，设置：应用程序准备完毕状态\n * 比如系统启用动需要首先获取当前登录用户及系统菜单\n * 当所有的加载完成后，我们认为系统已准备完毕，此时可以进行相应的其它请求\n *\n */\nexport class AppOnReadyItem {\n\n  /*本元素（比如：系统菜单）是否准备完毕*/\n  private _READY = false;\n\n  /* 当发送是否准备完毕状态时执行的回调方法 */\n  private readonly sendReadyFn: (state: boolean) => void = (() => {\n  });\n\n  constructor(fn: (readyState: boolean) => void) {\n    this.sendReadyFn = fn;\n  }\n\n  get ready(): boolean {\n    return this._READY;\n  }\n\n  set ready(value: boolean) {\n    this._READY = value;\n    this.sendReadyFn(value);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  private static digits = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\n  /**\n   * 应用是否准备完毕\n   */\n  private appIsReadySubject = new BehaviorSubject<boolean>(true);\n  public appIsReady$: Observable<boolean>;\n\n  /**\n   * 影响应用准备完毕的项\n   * 遵循：对扩展开放，对修改关闭的原则。其它模块如果有影响系统启动的项时，将其添加到本属性中即可\n   */\n  private appOnReadyItems = Array<AppOnReadyItem>();\n\n  /**\n   * 缓存的当应用准备完毕后回调的函数\n   * 该函数仅当应用准备完毕后调用1次\n   */\n  private appOnReadyCacheCallbacks: Array<() => void> = [];\n\n  /** 当前是否处于后退状态 */\n  private isBack = false;\n\n  /** 当前路由是否能后退观察者 */\n  private canBack$ = new BehaviorSubject<boolean>(false);\n\n  /** 所有路由信息 */\n  private routeStates: Array<{ url: string, state: UnknownProperty }> = [];\n\n  /** 当前路由 */\n  private currentUrl: string;\n\n  /** 字符集 */\n  private characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  /** 全局唯一 id 列表 */\n  private uniqueIds: Set<string> = new Set<string>();\n\n  private loadingSubject = new Subject<boolean>();\n  public loading$: Observable<boolean>;\n\n  /**\n   * 使用ID进行比较\n   * @param item1 第一个比较的对象\n   * @param item2 第二个比较的对象\n   */\n  public static comparedWithId(item1: { id: number }, item2: { id: number }): boolean {\n    if (item2 === item1) {\n      return true;\n    }\n\n    if (item1 === null && item2 === undefined) {\n      return true;\n    }\n\n    if (isNotNullOrUndefined(item1) && isNotNullOrUndefined(item2)) {\n      return item1.id === item2.id;\n    }\n\n    return false;\n  }\n\n  /**\n   * 转换为中文字符\n   * 11 -> 十一\n   * 支持两位及以下\n   * @param num 输入数字\n   */\n  public static convertToChineseCharacter(num: number): string {\n    /** 截取字符串 */\n    const arr = String(num).split('');\n    const length = arr.length;\n    /** 校验支持长度 */\n    if (length <= 0 || length >= 3) {\n      return '';\n    }\n    /** 一位，直接转换成数字 */\n    if (length === 1) {\n      return this.digits[num];\n    }\n    /** 两位，拼接单位 十 */\n    let result = '';\n    if (arr[0] !== '1') {\n      result += this.digits[arr[0]];\n    }\n    result += '十';\n    if (arr[1] !== '0') {\n      result += this.digits[arr[1]];\n    }\n    return result;\n  }\n\n  constructor(private router: Router) {\n    this.loading$ = this.loadingSubject.asObservable();\n\n    this.appIsReady$ = this.appIsReadySubject.asObservable();\n    this.appIsReady$.subscribe(isReady => {\n      if (isReady) {\n        this.invokeOnReadyCacheCallback();\n      }\n    });\n\n    /** 订阅路由事件 */\n    this.router.events\n    /** 过滤：路由结束事件 */\n      .pipe(filter((event) => {\n        return event instanceof NavigationEnd;\n      }))\n      /** 订阅路由结束后执行的方法 */\n      .subscribe((routeState: NavigationEnd) => {\n        this.currentUrl = routeState.urlAfterRedirects;\n\n        if (this.isBack) {\n          /** 如果处于后退状态，清空状态 */\n          /** 获取完历史参数以后再清除后退状态 */\n          this.isBack = false;\n        } else if (!this.currentUrl.startsWith('/auth')) {\n          /** 如果不是认证模块，将当前路由添加到数组中 */\n          if (this.routeStates.length >= 50) {\n            this.routeStates.splice(0, 1);\n          }\n          this.routeStates.push({url: this.currentUrl, state: this.router.getCurrentNavigation().extras.state});\n        }\n\n        /** 更新是否能后退信息 */\n        this.canBack$.next(this.routeStates.length >= 2);\n      });\n\n  }\n\n  /**\n   * 应用程序准备就绪\n   * @param callback 回调方法\n   */\n  appOnReady(callback: () => void): void {\n    if (this.appIsReadySubject.getValue()) {\n      callback();\n    } else {\n      this.appOnReadyCacheCallbacks.push(callback);\n    }\n  }\n\n  /** 路由后退 */\n  back(): void {\n    /** 清空当前的路由信息 */\n    this.clearCurrentRoute();\n    if (this.routeStates.length > 0) {\n      /** 获取待后退的url */\n      const state = this.routeStates[this.routeStates.length - 1];\n      /** 设置后退状态 */\n      this.isBack = true;\n      /** 路由跳转 */\n      this.router.navigateByUrl(state.url, {state: state.state});\n    }\n  }\n\n  canBack(): Observable<boolean> {\n    return this.canBack$;\n  }\n\n  /**\n   * 判断是否为指定浏览器并且版本不低于要求最低版本\n   * @param type 浏览器类型\n   * @param version 浏览器版本\n   * b\n   * @author zhaokaiqiang\n   */\n  checkBrowserTypeAndVersion(type: 'chrome' | 'firefox', version: string): boolean {\n    if (this.getBrowserTypeAndVersion().type === type && this.compareVersion(this.getBrowserTypeAndVersion().version, version) >= 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 清空当前路由信息\n   */\n  clearCurrentRoute(): void {\n    this.routeStates.pop();\n  }\n\n  /**\n   * @ sample\n   * compareVersion('10.2.3.0,', '9.0.0.0') = 1;\n   * compareVersion('10.2.3.0,', '10.2.3.0') = 0;\n   * compareVersion('9.0.0.0,', '10.2.3.0') = -1;\n   * @param version1 版本号1\n   * @param version2 版本号2\n   * @author zhaokaiqiang\n   */\n  public compareVersion(version1: string, version2: string): number {\n    Assert.isNotNullOrUndefined(version1, version2, '传入的参考不能为null');\n    const versionArray1 = version1.split('\\.'); // 注意此处为正则匹配，不能用\".\"；\n    const versionArray2 = version2.split('\\.');\n    const minLength = Math.min(versionArray1.length, versionArray2.length); // 取最小长度值\n    let diff = 0;\n    for (let idx = 0; idx < minLength; idx++) {\n      if (versionArray1[idx].length - versionArray2[idx].length !== 0) { // 先比较长度\n        diff = versionArray1[idx].length - versionArray2[idx].length;\n        break;\n      } else if (versionArray1[idx].localeCompare(versionArray2[idx]) !== 0) { // 再比较字符\n        diff = versionArray1[idx].localeCompare(versionArray2[idx]);\n        break;\n      }\n    }\n\n    // 如果已经分出大小，则直接返回，如果未分出大小，则再比较位数，有子版本的为大；\n    diff = (diff !== 0) ? diff : versionArray1.length - versionArray2.length;\n    return diff;\n  }\n\n  /**\n   * 计算是否所有的系统启动项均已准备完毕\n   * 遍历元素，所有的元素全部准备完毕，发送true\n   * @param readyState 准备状态\n   */\n  private computeAppIsReady(readyState): void {\n    if (!readyState) {\n      this.appIsReadySubject.next(false);\n    } else {\n      let result = true;\n      this.appOnReadyItems.forEach(readyItem => {\n        if (!readyItem.ready) {\n          result = false;\n        }\n      });\n      this.appIsReadySubject.next(result);\n    }\n  }\n\n  /**\n   * 是否确认提示框\n   * @param callback    回调\n   * @param description 描述\n   * @param title       标题\n   */\n  confirm(callback?: (state?: boolean) => void, description: string = '该操作不可逆，请谨慎操作', title: string = '请确认',\n          confirmButtonText = '确定', cancelButtonText = '取消', options = {icon: 'question' as SweetAlertIcon}): void {\n    swal.fire({\n      titleText: title,\n      text: description,\n      icon: options.icon,\n      background: '#F7F8FA',\n      allowOutsideClick: false,\n      confirmButtonText,\n      confirmButtonColor: '#007BFF',\n      showCancelButton: true,\n      cancelButtonText,\n      cancelButtonColor: '#6C757D'\n    }).then((result: SweetAlertResult) => {\n      if (result.value) {\n        // 执行回调\n        if (callback) {\n          callback(result.value);\n        }\n      } else {\n        callback(false);\n      }\n    });\n  }\n\n  /**\n   * 操作失败提示框\n   * @param callback    回调\n   * @param description 描述\n   * @param title       标题\n   */\n  error(callback?: () => void, description: string = '', title: string = '操作失败'): void {\n    swal.fire({\n      titleText: title,\n      text: description,\n      icon: 'error',\n      background: '#F7F8FA',\n      allowOutsideClick: false,\n      confirmButtonText: '确定',\n      confirmButtonColor: '#007BFF',\n      showCancelButton: false\n    }).then((result: SweetAlertResult) => {\n      if (result.value) {\n        // 执行回调\n        if (callback) {\n          callback();\n        }\n      }\n    });\n  }\n\n  /**\n   * 添加影响APP是否准备好的项\n   * 1. 每新添加一项，则重新计算一次系统是否准备好，并对应的发送通知\n   * 2. 每新项增加回调函数（以使得其在变更_ready时，能够解发重新计算APP是否准备好的方法并发送通知）\n   * 3. 将新添加的项添加到影响系统是否启动完毕的数组中\n   * @param isReady 是否准备完毕的初始化\n   * @return appOnReadyItem 应用准备完毕项\n   */\n  public getAppOnReadyItem(isReady = false): AppOnReadyItem {\n    // 实初化\n    const appOnReadyItem = new AppOnReadyItem((readyState) => {\n      this.computeAppIsReady(readyState);\n    });\n    appOnReadyItem.ready = isReady;\n    this.appOnReadyItems.push(appOnReadyItem);\n\n    // 当前项为：未就绪，则重新计算\n    if (!isReady) {\n      this.computeAppIsReady(isReady);\n    }\n    return appOnReadyItem;\n  }\n\n  /**\n   * 获取当前路由的状态值\n   */\n  getCurrentRouteState(): UnknownProperty {\n    if (this.routeStates.length === 0) {\n      return {};\n    }\n\n    const state = this.routeStates[this.routeStates.length - 1].state;\n    if (!isNotNullOrUndefined(state)) {\n      return {};\n    }\n    return state;\n  }\n\n  /**\n   * 获取浏览器类型和版本\n   * @author zhaokaiqiang\n   */\n  public getBrowserTypeAndVersion(): { type: 'msie' | 'opera' | 'safari' | 'chrome' | 'firefox' | 'edge' | 'other', version?: string } {\n    let type = 'other' as 'msie' | 'opera' | 'safari' | 'chrome' | 'firefox' | 'edge' | 'other';\n    let version = null;\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    if (userAgent.match(/msie ([\\d.]+)/)) {\n      type = 'msie';\n      version = userAgent.match(/msie ([\\d.]+)/)[1];\n    } else if (userAgent.match(/edge\\/([\\d.]+)/)) {\n      type = 'edge';\n      version = userAgent.match(/edge\\/([\\d.]+)/)[1];\n    } else if (userAgent.match(/edg\\/([\\d.]+)/)) {\n      type = 'edge';\n      version = userAgent.match(/edg\\/([\\d.]+)/)[1];\n    } else if (userAgent.match(/firefox\\/([\\d.]+)/)) {\n      type = 'firefox';\n      version = userAgent.match(/firefox\\/([\\d.]+)/)[1];\n    } else if (userAgent.match(/opr.([\\d.]+)/)) {\n      type = 'opera';\n      version = userAgent.match(/opr.([\\d.]+)/)[1];\n    } else if (userAgent.match(/chrome\\/([\\d.]+)/)) {\n      type = 'chrome';\n      version = userAgent.match(/chrome\\/([\\d.]+)/)[1];\n    } else if (userAgent.match(/version\\/([\\d.]+).*safari/)) {\n      type = 'safari';\n      version = userAgent.match(/version\\/([\\d.]+).*safari/)[1];\n    } else if (userAgent.match(/rv:([\\d.]+)/)) {\n      type = 'msie';\n      version = userAgent.match(/rv:([\\d.]+)/)[1];\n    }\n\n    return {type, version};\n  }\n\n  /**\n   * 生成随机 id\n   * 暂定 8 位，该 API 可能会在以后的版本中更改，建议不少于 6 位，\n   */\n  getUniqueId(): string {\n    /** 生成随机字符串 */\n    let result = '';\n    const length = this.characters.length;\n    for (let i = 0; i < 8; i++) {\n      result += this.characters.charAt(Math.floor(Math.random() * length));\n    }\n\n    if (this.uniqueIds.has(result)) {\n      /** 如果重复，重新生成 */\n      return this.getUniqueId();\n    } else {\n      /** 添加到集合中 */\n      this.uniqueIds.add(result);\n      return result;\n    }\n  }\n\n  httpError(httpError: HttpErrorResponse, callback?: () => void): void {\n    return this.error(callback, httpError.error.message, '请求错误');\n  }\n\n  /**\n   * 友情提示消息框\n   * @param callback    回调\n   * @param description 描述\n   * @param title       标题\n   * @param options showConfirmButton: 是否显示确认按钮\n   */\n  info(callback?: () => void, description: string = '', title: string = '友情提示', options = {showConfirmButton: true}): void {\n    swal.fire({\n      titleText: title,\n      text: description,\n      icon: 'info',\n      background: '#F7F8FA',\n      allowOutsideClick: false,\n      confirmButtonText: '确定',\n      confirmButtonColor: '#007BFF',\n      showCancelButton: false,\n      showConfirmButton: options.showConfirmButton\n    }).then((result: SweetAlertResult) => {\n      if (result.value) {\n        // 执行回调\n        if (callback) {\n          callback();\n        }\n      }\n    });\n  }\n\n  /**\n   * 调用缓存的回调方法，并在调用后清空缓存以防止被二次调用\n   */\n  invokeOnReadyCacheCallback(): void {\n    this.appOnReadyCacheCallbacks.forEach(callback => {\n      callback();\n    });\n    this.appOnReadyCacheCallbacks.splice(0, this.appOnReadyCacheCallbacks.length);\n  }\n\n  /**\n   * 判断当前 字符串 是否是手机号\n   * @param mobile 手机号字符串\n   */\n  isMobile(mobile: string): boolean {\n    const regex = /^(((13[0-9]{1})|(15[0-9]{1})|(16[0-9]{1})|(17[0-8]{1})|(18[0-9]{1})|(19[0-9]{1})|(14[5-9]{1}))+\\d{8})$/;\n    return regex.test(mobile);\n  }\n\n  /**\n   * 正在加载中弹窗\n   * 标题每1秒钟自动更新一次，加入 . 后缀\n   * @param title 标题\n   * @param description 描述信息\n   * @param currentProcess 当前进度\n   * @param maxStack 最大堆栈数（防止意外关闭窗口后的内存溢出）\n   * @return close 关闭弹窗 currentProcessSubject 用于发送当前进度的数据源\n   */\n  loading(title = '请稍后', description = '', currentProcess = '', maxStack = 1000):\n    { close: () => void, currentProcessSubject: Subject<string> } {\n    const html = `${description}<br><b>${currentProcess}</b>`;\n    const tips = [];\n    const currentProcessSubject = new Subject<string>();\n    currentProcessSubject.asObservable().subscribe((tip) => {\n      tips.push(tip);\n    });\n\n    const loadingTipsTimerInterval = setInterval(() => {\n      const tip = tips.shift();\n      if (tip) {\n        Swal.getContent().querySelector('b').textContent = tip;\n      }\n    }, 1500);\n\n    let stack = 0;\n    let timerInterval;\n    swal.fire({\n      title,\n      html,\n      timerProgressBar: true,\n      onBeforeOpen: () => {\n        swal.showLoading();\n        timerInterval = setInterval(() => {\n          Swal.getTitle().textContent = convertToLoadingFormat(Swal.getTitle().textContent);\n          stack++;\n          if (stack > maxStack) {\n            clearInterval(timerInterval);\n            clearInterval(loadingTipsTimerInterval);\n          }\n        }, 1000);\n      },\n      onClose(): void {\n        clearInterval(timerInterval);\n      }\n    });\n\n    return {\n      close: (): void => {\n        Swal.close();\n        clearInterval(loadingTipsTimerInterval);\n      }, currentProcessSubject\n    };\n  }\n\n  /**\n   * 获取特定长度的随机字符串\n   * @param length 特定长度\n   * @deprecated 请使用test/utils.ts的同名方法\n   */\n  randomString(length: number): string {\n    return Random.nextString('', length);\n  }\n\n  /**\n   * 应用在准备的阶段需要设置正在加载中状态\n   * @param state 状态\n   */\n  setLoading(state: boolean): void {\n    this.loadingSubject.next(state);\n  }\n\n  /**\n   * 操作成功提示框\n   * @param callback    回调\n   * @param description 描述\n   * @param title       标题\n   */\n  success(callback?: () => void, description: string = '', title: string = '操作成功', options = {confirmButtonText: '确定'}): void {\n    swal.fire({\n      titleText: title,\n      text: description,\n      icon: 'success',\n      background: '#F7F8FA',\n      allowOutsideClick: false,\n      confirmButtonText: options.confirmButtonText,\n      confirmButtonColor: '#007BFF',\n      showCancelButton: false\n    }).then((result: SweetAlertResult) => {\n      if (result.value) {\n        // 执行回调\n        if (callback) {\n          callback();\n        }\n      }\n    });\n  }\n\n  // 设置当前路由的参数\n  updateCurrentRouteState(state: UnknownProperty): void {\n    this.routeStates[this.routeStates.length - 1].state = state;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {GoodsType} from '../../GoodsType';\nimport {GoodsService} from '../../../service/goods.service';\n\n@Component({\n  selector: 'app-goods-select',\n  templateUrl: './goods-selector.component.html',\n  styleUrls: ['./goods-selector.component.scss']\n})\nexport class GoodsSelectorComponent implements OnInit {\n  public state = {} as {\n    goods: GoodsType,\n    goodsTypes: Array<GoodsType>\n  };\n\n\n  @Input()\n   set goods(value: GoodsType){\n    console.log(value);\n    this.state.goods = value;\n  }\n\n\n  get goods(): GoodsType {\n    console.log(this.state.goods);\n    return this.state.goods;\n  }\n\n  @Output()\n  goodsSelect: EventEmitter<GoodsType> = new EventEmitter();\n\n  constructor(private goodsService: GoodsService) {\n  }\n\n  ngOnInit(): void {\n    this.state.goods = null;\n    this.getAllGoodsType();\n  }\n\n  public getAllGoodsType(): void {\n    this.goodsService.getAll().subscribe((goodsTypes: Array<GoodsType>) => {\n      console.log(goodsTypes);\n      this.state.goodsTypes = goodsTypes;\n    });\n  }\n\n  public change(goodsType: GoodsType): void {\n    this.goodsSelect.emit(goodsType);\n  }\n\n  comparedWithId(item1, item2): any {\n    const result1: boolean = item1 === item2;\n    let result2: boolean;\n    if (item1 && item2) {\n      result2 = item1.id === item2.id;\n    }\n    return result1 || result2;\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  color: '#007BFF',\n  title: '物流运输平台',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../func/User';\nimport {UserService} from '../../service/user.service';\nimport {AuthService} from '../../service/auth.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  /**\n   * 当前登录用户\n   */\n  currentUser: User;\n\n  constructor(private userService: UserService,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.authService.getCurrentLoginUser$()\n      .subscribe((user: User) => {\n        this.currentUser = user;\n      });\n  }\n}\n","/**\n * 对字符串进行简单的加密\n * @param string 加密后的字符串\n */\nexport function hash(sourceString: string): number {\n  let hashCode = 0;\n  let i;\n  let chr;\n  for (i = 0; i < sourceString.length; i++) {\n    chr = sourceString.charCodeAt(i);\n    // tslint:disable-next-line:no-bitwise\n    hashCode = ((hashCode << 5) - hashCode) + chr;\n    // tslint:disable-next-line:no-bitwise\n    hashCode |= 0; // Convert to 32bit integer\n  }\n  return hashCode;\n}\n\n/**\n * 转换为loading字样\n * @param target 目标字符串\n * @param suffix 后缀\n * @param length 长度\n * @example\n * '请稍候' => '请稍候.'\n * '请稍候.' => '请稍候..'\n * '请稍候..' => '请稍候...'\n * '请稍候...' => '请稍候'\n */\nexport function convertToLoadingFormat(target: string, suffix = '.', length = 3): string {\n  const strings = target.split(suffix);\n  if (strings.length <= length) {\n    target += '.';\n  } else {\n    target = strings[0];\n  }\n  return target;\n}\n\n\nexport class Assert {\n\n  /**\n   * 断言是数组\n   * @param value 断言的值\n   * @param message 出错提示\n   */\n  static isArray(value: any, message: string): void {\n    if (!isNotNullOrUndefined(value) || !Array.isArray(value)) {\n      throw new Error(message);\n    }\n  }\n\n  /**\n   * 断言被定义\n   * undefined 异常\n   * null 成功\n   * other 成功\n   * @param args 多参数\n   */\n  static isDefined(...args: any[]): void {\n    const message = this.validateArgs(args);\n    args.forEach(value => {\n      if (!isDefined(value)) {\n        throw new Error(message);\n      }\n    });\n  }\n\n  static isObject(...args: any[]): void {\n    const message = this.validateArgs(args);\n    args.forEach(arg => {\n      const type = typeof arg;\n      const isObject = type === 'function' || type === 'object' && !!arg;\n      if (!isObject) {\n        throw new Error(message);\n      }\n    });\n  }\n\n  /**\n   * 断言输入的值为字符串\n   * @param args 字符串1，字符串2...提示信息\n   */\n  static isString(...args: any[]): void {\n    const message = this.validateArgs(args);\n    args.forEach(value => {\n      if (typeof value !== 'string') {\n        throw new Error(message);\n      }\n    });\n  }\n\n  static isNotNullOrUndefined(...args: any[]): void {\n    const message = this.validateArgs(args);\n    args.forEach(value => {\n      if (!isNotNullOrUndefined(value)) {\n        throw new Error(message);\n      }\n    });\n  }\n\n  /**\n   * 校验参考并返回参数的最后一项做为message提示消息返回\n   * @param args 多个参数\n   */\n  private static validateArgs(args: any[]): string {\n    if (args.length < 2) {\n      throw new Error('最少输入两个参数');\n    }\n\n    if (typeof (args[args.length - 1]) !== 'string') {\n      throw new Error('最后一个参数必须为字符串');\n    }\n\n    const message = args.pop();\n    return message;\n  }\n\n  static isUndefined(param: any): void {\n    if (typeof param !== 'undefined') {\n      throw new Error('变量已定义');\n    }\n  }\n\n  /**\n   * 断言为null\n   * null 成功\n   * undefined 异常\n   * other 异常\n   * @param param 输入\n   */\n  static isNull(param: any): void {\n    if (typeof param === 'undefined' || param !== null) {\n      throw new Error('变量非空');\n    }\n  }\n}\n\n/**\n * 是否不为null或undefined\n * undefined -> false\n * null -> false\n * other -> true\n * @param value 值\n */\nexport function isNotNullOrUndefined<T>(value: T | undefined | null): value is T {\n  return value as T !== undefined && value as T !== null;\n}\n\n/**\n * 为null或undefined\n * @param value 值\n */\nexport function isNullOrUndefined<T>(value: T | undefined | null): value is T {\n  return !isNotNullOrUndefined(value);\n}\n\n/**\n * 是否被定义\n * undefined -> false\n * other -> true\n * @param value 校验值\n */\nexport function isDefined<T>(value: T | undefined): value is T {\n  return value as T !== undefined;\n}\n\n\n/**\n * 只包含属性而不包含方法\n * https://stackoverflow.com/questions/52692606/how-to-declare-a-type-in-typescript-that-only-includes-objects-and-not-functions\n */\nexport interface UnknownProperty {\n  [k: string]: unknown;\n}\n","import {Injectable} from '@angular/core';\nimport {CommonService} from './common.service';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, ReplaySubject} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {VUser} from '../base/vuser';\nimport {AbstractControl, AsyncValidatorFn, FormGroup, ValidationErrors, ValidatorFn} from '@angular/forms';\nimport {User} from '../func/User';\nimport {Driver} from '../func/Driver';\nimport {Owner} from '../func/Owner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private currentLoginUser: User;\n  private currentLoginUserSubject = new ReplaySubject<User>(1);\n  public currentLoginUser$: Observable<User>;\n  private url = 'user';\n\n  constructor(private commonService: CommonService,\n              private httpClient: HttpClient,\n              private router: Router) {\n    this.currentLoginUser$ = this.currentLoginUserSubject.asObservable();\n    this.getCurrentLoginUser();\n  }\n\n  private getCurrentLoginUser(): void {\n    const appOnReadyItem = this.commonService.getAppOnReadyItem();\n\n    this.httpClient.get<User>(`${this.url}/me`)\n      .subscribe(user => {\n        appOnReadyItem.ready = true;\n        this.setCurrentLoginUser(user);\n      }, () => {\n        appOnReadyItem.ready = true;\n        this.setCurrentLoginUser(null);\n      });\n  }\n\n  /**\n   * 获取登录用户时，应该结合appOnReady。示例：\n   * this.commonService.appOnReady(() => {const user = this.userService.getCurrentUser();});\n   */\n  getCurrentUser(): User | null {\n    return this.currentLoginUser;\n  }\n\n  login(user: User): Observable<User> {\n    // 新建Headers，并添加认证信息\n    let headers = new HttpHeaders();\n    // 添加 content-type\n    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    // 添加认证信息\n    headers = headers.append('Authorization', 'Basic ' + btoa(user.username + ':' + encodeURIComponent(user.password)));\n    // 发起get请求并返回\n    return this.httpClient.get<User>(this.url + '/me', {headers}).pipe(tap((data) => {\n      this.setCurrentLoginUser(data);\n    }));\n  }\n\n  logout(): Observable<void> {\n    return this.httpClient.get<void>(`${this.url}/logout`).pipe(map(() => {\n      this.setCurrentLoginUser(null);\n    }));\n  }\n\n\n  registerDriver(driver: Driver): Observable<void> {\n    return this.httpClient.post<void>(`${this.url}/driverRegister`, driver);\n  }\n\n  registerOwner(owner: Owner): Observable<void> {\n    return this.httpClient.post<void>(`${this.url}/ownerRegister`, owner);\n  }\n\n  /**\n   * 设置当前登录用户\n   * @param user 登录用户\n   */\n  setCurrentLoginUser(user: User): void {\n    this.currentLoginUser = user;\n    this.currentLoginUserSubject.next(user);\n  }\n\n  /**\n   * 校验密码是否正确\n   * @param password 密码\n   */\n  public checkPasswordIsRight(password: string): Observable<boolean> {\n    const vUser = new VUser();\n    vUser.password = password;\n    return this.httpClient.post<boolean>(`${this.url}/checkPasswordIsRight`, vUser);\n  }\n\n  /**\n   * 验证原密码是否正确\n   */\n  public oldPasswordValidator(): AsyncValidatorFn {\n    return (ctrl: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n      return this.checkPasswordIsRight(ctrl.value)\n        .pipe(map((isRight: boolean) => (isRight ? null : {passwordError: true})),\n          catchError(() => null));\n    };\n  }\n\n  /**\n   * 验证新密码与确认密码是否相同\n   * @param control 表单\n   */\n  public confirmPasswordValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n    const newPassword = control.get('newPassword').value;\n    const confirmNewPassword = control.get('confirmNewPassword').value;\n\n    // 判断确认密码与新密码是否相同\n    if (newPassword && confirmNewPassword) {\n      return newPassword !== confirmNewPassword ? {confirmPasswordError: true} : null;\n    }\n    return null;\n  }\n\n  /**\n   * 登录用户修改密码\n   * @param newPassword 新密码\n   * @param oldPassword 旧密码\n   */\n  public updatePassword(newPassword: string, oldPassword: string): Observable<void> {\n    const vUser = new VUser();\n    vUser.password = oldPassword;\n    vUser.newPassword = encodeURIComponent(newPassword);\n    return this.httpClient.put<void>(`${this.url}/updatePassword`, vUser);\n  }\n\n  /**\n   * 更新\n   */\n  public update(userId: number, user: User): Observable<User> {\n    console.log(user);\n    return this.httpClient.put<User>(`${this.url}/${userId.toString()}`, user);\n  }\n\n  /**\n   * 重置密码\n   * @param id  用户id\n   * @param student  学生\n   */\n  public resetPassword(id: number): Observable<void> {\n    console.log(this.url + '/resetPassword/' + id);\n    return this.httpClient.put<void>(this.url + '/resetPassword/' + id , id);\n  }\n}\n","export default \"<select [compareWith]=\\\"comparedWithId\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"this.state.goods\\\" (change)=\\\"change(goods)\\\">\\n  <option [ngValue]=\\\"null\\\" >请选择货物类型...</option>\\n  <option *ngFor=\\\"let _goodsType of state.goodsTypes\\\" [ngValue]=\\\"_goodsType\\\">{{_goodsType.name}}</option>\\n</select>\\n\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'web';\n}\n","export default \"<router-outlet></router-outlet>\\n\";","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PersonalCenterModule} from './pages/personal-center/personal-center.module';\nimport {FuncModule} from './func/func.module';\nimport {OrderModule} from './pages/owner/order/order.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {YunzhiInterceptor} from './net/yunzhi.interceptor';\nimport {AccountComponent} from './pages/account/account.component';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {OrderManageComponent} from './pages/driver/order-manage/order-manage.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FuncModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n    IonicModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: YunzhiInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmMvc2VsZWN0ZXIvZ29vZHMtc2VsZWN0b3IvZ29vZHMtc2VsZWN0b3IuY29tcG9uZW50LnNjc3MifQ== */\";","/**\n * user 对应的vo\n */\nexport class VUser {\n  /** 密码 */\n  password: string;\n\n  /** 新密码 */\n  newPassword: string;\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport {User} from '../func/User';\nimport {HttpClient} from '@angular/common/http';\nimport {GoodsType} from '../func/GoodsType';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoodsService {\n  private url = 'goodsType';\n\n  constructor(private  httpClient: HttpClient) { }\n\n  getAll(): any{\n    return this.httpClient.get<Array<GoodsType>>(`${this.url}`);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport { GoodsSelectorComponent } from './selecter/goods-selector/goods-selector.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {StatusPipe} from './pipe/Status.pipe';\n@NgModule({\n    declarations: [\n        GoodsSelectorComponent,\n        StatusPipe\n    ],\n    exports: [\n        GoodsSelectorComponent,\n        StatusPipe\n    ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  entryComponents: [\n  ]\n})\nexport class FuncModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, finalize, mergeMap} from 'rxjs/operators';\nimport {CommonService} from '../service/common.service';\nimport { Router } from '@angular/router';\nimport {config} from '../conf/app.conf';\nimport {isDefined} from '../core/secondUtils';\nimport {AuthService} from '../service/auth.service';\n\n/**\n * Yunzhi拦截器，用于实现添加url，添加header，全局异常处理\n * 个别请求不需要进行拦截的，请在请求的header中加入：do_not_intercept,值为true\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class YunzhiInterceptor implements HttpInterceptor {\n  static DONT_INTERCEPT_HEADER_KEY = 'do_not_intercept';\n\n  constructor(private commonService: CommonService,\n              private authService: AuthService,\n              private router: Router) {\n\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    /**\n     * 为request加上服务端前缀\n     */\n    let url = req.url;\n\n    // header中带有do_not_intercept，且值为true，则不添加url前缀\n    if (('true' !== req.headers.get(YunzhiInterceptor.DONT_INTERCEPT_HEADER_KEY))\n      && !url.startsWith('https://') && !url.startsWith('http://')) {\n      url = config.server + url;\n    }\n\n    let request = req.clone({url});\n    /**\n     * 设置headers，防止弹出对话框\n     * https://stackoverflow.com/questions/37763186/spring-boot-security-shows-http-basic-auth-popup-after-failed-login\n     */\n    let headers = request.headers;\n    headers = headers.append('X-Requested-With', 'XMLHttpRequest');\n    request = request.clone({headers});\n\n    /**\n     * 过滤到null及undefined\n     */\n    let cleanedParams = new HttpParams();\n    request.params.keys().forEach(x => {\n      if (isDefined(request.params.get(x))) {\n        cleanedParams = cleanedParams.append(x, req.params.get(x));\n      }\n    });\n\n\n    request = request.clone({headers, params: cleanedParams});\n\n    this.commonService.setLoading(true);\n\n    /**\n     * 数据过滤\n     */\n    return next.handle(request).pipe(\n      // mergeMap = merge + map\n      mergeMap((event: any) => {\n        return of(event);\n      }),\n      finalize(() => this.commonService.setLoading(false)),\n      catchError((error: HttpErrorResponse) => {\n        return this.handleHttpException(error);\n      })\n    );\n  }\n\n  private handleHttpException(error: HttpErrorResponse): Observable<HttpErrorResponse> {\n    switch (error.status) {\n      case 401:\n        if (!this.router.url.startsWith(`/login`)) {\n          // 未登录，跳转到登录页\n          this.router.navigateByUrl('/login');\n        }\n        break;\n      default:\n        break;\n    }\n    // 最终将异常抛出来，便于组件个性化处理\n    throw error;\n  }\n}\n","export const config = {\n  server: '/api/',\n  size: 10,\n  version: '1.0.0',\n  autoSaveInterval: 10 * 60 * 1000, // 默认自动保存的时间\n  screenLockTime: 10 * 60 * 1000,   // 系统锁屏时间\n  logoutTime: 30 * 60 * 1000,       // 系统自动注销时间\n  errorResponseCodeKey: 'code',\n  errorResponseMessageKey: 'message',\n  phoneNumber: 'thisIsOurPhoneNumber' // 系统报错时提示的联系电话\n};\n","export default \"\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-md-4 offset-md-2\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 text-right\\\">\\n        <label for=\\\"name\\\">姓名：</label>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <div id=\\\"name\\\">\\n          {{currentUser?.name}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-md-4 offset-md-2\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 text-right\\\">\\n        <label for=\\\"phone\\\">电话：</label>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <div id=\\\"phone\\\">\\n          {{currentUser?.username}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-md-4 offset-md-2\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 text-right\\\">\\n        <label for=\\\"quota\\\">余额：</label>\\n      </div>\\n      <div class=\\\"col-md-8\\\">\\n        <div id=\\\"quota\\\">\\n          {{currentUser?.quota}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-md-4 offset-md-2\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 offset-md-2\\\">\\n        <a class=\\\"btn btn-primary btn-sm mr-2\\\" routerLink=\\\"/account/add\\\">\\n          <i class=\\\"fas fa-edit\\\"></i>\\n          账户充值\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './pages/auth/login/login.component';\n\nconst routes: Routes = [\n    {\n      path: '',\n      redirectTo: 'login',\n      pathMatch: 'full'\n    },\n    {\n      path: 'login',\n      loadChildren: () => import('./pages/auth/login/login.module').then(m => m.LoginModule)\n    },\n    {\n      path: 'dashboard',\n      loadChildren: () => import('./pages/dashboard/dashboard.module').then(m => m.DashboardModule),\n      data: {\n        title: '仪表盘'\n      }\n    },\n    {\n      path: 'order',\n      loadChildren: () => import('./pages/owner/order/order.module').then(m => m.OrderModule),\n      data: {\n        title: '订单管理'\n      }\n    },\n    {\n      path: 'driverOrder',\n      loadChildren: () => import('./pages/driver/dOrders/dOrder.module').then(m => m.DOrderModule),\n      data: {\n        title: '订单管理'\n      }\n    },\n    {\n      path: 'driverOrderManage',\n      loadChildren: () => import('./pages/driver/order-manage/orderManage.module').then(m => m.OrderManageModule),\n      data: {\n        title: '查看订单'\n      }\n    },\n    {\n      path: 'account',\n      loadChildren: () => import('./pages/account/account.module').then(m => m.AccountModule),\n      data: {\n        title: '账户管理'\n      }\n    },\n    {\n      path: 'personalCenter',\n      loadChildren: () => import('./pages/personal-center/personal-center.module').then(m => m.PersonalCenterModule),\n      data: {\n        title: '个人中心'\n      }\n    }\n  ]\n;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}